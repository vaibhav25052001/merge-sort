class Solution {
    private:
    void merge(vector<int>&nums,int s,int e){
       int mid=(s+e)/2;

       int len1=mid-s+1;
       int len2=e-mid;

       vector<int>first(len1);
       vector<int>second(len2);

       int k=s;
       for(int i=0;i<len1;i++)
       first[i]=nums[k++];

       for(int i=0;i<len2;i++)
       second[i]=nums[k++];

       int i1=0,i2=0;
       k=s;


       //merge two array

       while(i1<len1 && i2<len2){
           if(first[i1]<second[i2])
           nums[k++]=first[i1++];
           else
           nums[k++]=second[i2++];
       }

       while(i1<len1){
           nums[k++]=first[i1++];
       }
       while(i2<len2){
           nums[k++]=second[i2++];
       }
    }

    void mergesort(vector<int>&nums,int s,int e){
        if(s>=e)
        return ;

        int mid=(s+e)/2;

        mergesort(nums,s,mid);
        mergesort(nums,mid+1,e);

        merge(nums,s,e);
    }
public:
    vector<int> sortArray(vector<int>& nums) {
        int s=0,e=nums.size()-1;
        mergesort(nums,s,e);
        return nums;
    }
};
